apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      serviceAccountName: postgres
      containers:
        - name: postgres
          image: postgres:15.1-alpine
          imagePullPolicy: IfNotPresent
          command:
            - docker-entrypoint.sh
            - -c
            - config_file=/etc/postgresql/postgresql.conf
            - -c
            - hba_file=/etc/postgresql/pg_hba.conf
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
          resources: {}
          env:
            - name:  PGDATA
              value: /var/lib/postgresql/data/pgdata
          envFrom:
            - secretRef:
                name: postgres-env-vars
          volumeMounts:
            - mountPath: /etc/postgresql
              name: config
            - mountPath: /var/lib/postgresql/data
              name: data
      volumes:
        - name: config
          secret:
            secretName: postgres-config-files
            defaultMode: 0444
        - name: data
          persistentVolumeClaim:
            claimName: postgres
      nodeSelector:
        kubernetes.io/hostname: docker-desktop
